version: '3.7'
name: soa
services:
  database_postgres:
    image: postgres:13.3
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    volumes:
      - ./first-service/src/main/resources/database/init-database-at-docker.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - backend-network

  first-service:
    build:
      context: first-service
      dockerfile: Dockerfile
    depends_on:
        - database_postgres
    ports:
        - '9099:9099'
    networks:
      - backend-network

  dublicate-first-service:
    build:
      context: first-service
      dockerfile: Dockerfile2
    depends_on:
      - database_postgres
    ports:
      - '9199:9199'
    networks:
      - backend-network

  haproxy-for-first-service:
    image: "haproxy:2.2-alpine"
    ports:
      - '9200:9200'
      - '8404:8404'
    volumes:
      - ./first-service/src/main/resources/keystore/orgdirectory.pem:/etc/ssl/certs/orgdirectory.pem
      - ./first-service/src/main/resources/keystore/org_cert_origin.pem:/etc/ssl/certs/org_cert_origin.pem
      - ./first-service/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
#    build:
#      context: first-service
#      dockerfile: DockerfileHaproxy
    depends_on:
      - first-service
      - dublicate-first-service
    networks:
      - backend-network

  consul:
    container_name: consul
    build: consul
    image: consul:1.14.2
    ports:
      - "8500:8500"
    networks:
      - backend-network

  second-service:
    build:
      context: second-service
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
      - '9990:9990'
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge